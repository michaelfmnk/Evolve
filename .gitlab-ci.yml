variables:
  DOCKER_DRIVER: overlay2
  DOCKER_IMAGE_API: registry.gitlab.com/dnu-dreamteam/dolgov/api
  DOCKER_IMAGE_DOCS_API: registry.gitlab.com/dnu-dreamteam/dolgov/docs-api
  DOCKER_IMAGE_UI: registry.gitlab.com/dnu-dreamteam/dolgov/ui
  BUILD_TIME_TAMPLATE: +%Y.%m.%d.%H.%M.%S

cache:
  paths:
  - ./api/.m2/
  - ./docs-api/.m2/
  - ./ui/.m2/
  - ./ui/node_modules/


services:
- docker:dind

stages:
- build-with-containers
- deploy

build-ui-with-containers:
  image: docker:latest
  stage: build-with-containers
  before_script:
  - cd ./ui/
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
  - BUILD_TIME=`date $BUILD_TIME_TAMPLATE`
  script:
  - >
    docker run -t --rm
    -v /var/run/docker.sock:/var/run/docker.sock
    -v "$(pwd)":"$(pwd)"
    -w "$(pwd)"
    -u 0:0
    maven:3-jdk-8
    mvn clean package -Pdocker -Dmaven.repo.local=.m2 -DdockerImageTags=$BUILD_TIME
  - docker push $DOCKER_IMAGE_UI
  after_script:
  - cd ../
  only:
  - master

build-api-with-containers:
  image: docker:latest
  stage: build-with-containers
  before_script:
  - cd ./api/
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
  - BUILD_TIME=`date $BUILD_TIME_TAMPLATE`
  script:
  - >
    docker run -t --rm
    -v /var/run/docker.sock:/var/run/docker.sock
    -v "$(pwd)":"$(pwd)"
    -w "$(pwd)"
    -u 0:0
    maven:3-jdk-8
    mvn clean package -Pdocker -Dmaven.repo.local=.m2 -DdockerImageTags=$BUILD_TIME -DforkCount=0
  - docker push $DOCKER_IMAGE_API
  after_script:
  - cd /
  artifacts:
    paths:
    - ./api/target/api-0.0.1-SNAPSHOT.jar
    when: always
  only:
  - master

build-docs-api-with-containers:
  image: docker:latest
  stage: build-with-containers
  before_script:
  - cd ./docs-api/
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
  - BUILD_TIME=`date $BUILD_TIME_TAMPLATE`
  script:
  - >
    docker run -t --rm
    -v /var/run/docker.sock:/var/run/docker.sock
    -v "$(pwd)":"$(pwd)"
    -w "$(pwd)"
    -u 0:0
    maven:3-jdk-8
    mvn clean package -Pdocker -Dmaven.repo.local=.m2 -DdockerImageTags=$BUILD_TIME -DforkCount=0
  - docker push $DOCKER_IMAGE_DOCS_API
  after_script:
  - cd /
  artifacts:
    paths:
    - ./docs-api/target/docs-api-0.0.1-SNAPSHOT.jar
    when: always
  only:
  - master

deploy:
  image: ubuntu
  stage: deploy
  before_script:
  - 'which sshpass || (apt-get update -y && apt-get install sshpass -y)'
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - mkdir -p ~/.ssh
  - echo "$DEPLOY_SERVER_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - eval "$(ssh-agent -s)"
  - ssh-add ~/.ssh/id_rsa
  - ssh-keyscan -H "$DEPLOYMENT_SERVER_IP" >> ~/.ssh/known_hosts
  script:
  - scp -r ./infrastructure/balancer ${DEPLOYMENT_SERVER_USER}@${DEPLOYMENT_SERVER_IP}:~/evolve/balancer/
  - scp ./infrastructure/recreate.sh ${DEPLOYMENT_SERVER_USER}@${DEPLOYMENT_SERVER_IP}:~/evolve/recreate.sh
  - ssh ${DEPLOYMENT_SERVER_USER}@${DEPLOYMENT_SERVER_IP} "cd evolve/; ls;chmod +x ./recreate.sh; (&>./log.txt ./recreate.sh &)"
  only:
  - master
